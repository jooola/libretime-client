/**
 * LibreTime API
 * Radio Broadcast & Automation Platform
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.LibreTimeApi);
  }
}(this, function(expect, LibreTimeApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new LibreTimeApi.PatchedShowInstance();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PatchedShowInstance', function() {
    it('should create an instance of PatchedShowInstance', function() {
      // uncomment below and update the code to test PatchedShowInstance
      //var instance = new LibreTimeApi.PatchedShowInstance();
      //expect(instance).to.be.a(LibreTimeApi.PatchedShowInstance);
    });

    it('should have the property itemUrl (base name: "item_url")', function() {
      // uncomment below and update the code to test the property itemUrl
      //var instance = new LibreTimeApi.PatchedShowInstance();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new LibreTimeApi.PatchedShowInstance();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new LibreTimeApi.PatchedShowInstance();
      //expect(instance).to.be();
    });

    it('should have the property starts (base name: "starts")', function() {
      // uncomment below and update the code to test the property starts
      //var instance = new LibreTimeApi.PatchedShowInstance();
      //expect(instance).to.be();
    });

    it('should have the property ends (base name: "ends")', function() {
      // uncomment below and update the code to test the property ends
      //var instance = new LibreTimeApi.PatchedShowInstance();
      //expect(instance).to.be();
    });

    it('should have the property record (base name: "record")', function() {
      // uncomment below and update the code to test the property record
      //var instance = new LibreTimeApi.PatchedShowInstance();
      //expect(instance).to.be();
    });

    it('should have the property rebroadcast (base name: "rebroadcast")', function() {
      // uncomment below and update the code to test the property rebroadcast
      //var instance = new LibreTimeApi.PatchedShowInstance();
      //expect(instance).to.be();
    });

    it('should have the property timeFilled (base name: "time_filled")', function() {
      // uncomment below and update the code to test the property timeFilled
      //var instance = new LibreTimeApi.PatchedShowInstance();
      //expect(instance).to.be();
    });

    it('should have the property created (base name: "created")', function() {
      // uncomment below and update the code to test the property created
      //var instance = new LibreTimeApi.PatchedShowInstance();
      //expect(instance).to.be();
    });

    it('should have the property lastScheduled (base name: "last_scheduled")', function() {
      // uncomment below and update the code to test the property lastScheduled
      //var instance = new LibreTimeApi.PatchedShowInstance();
      //expect(instance).to.be();
    });

    it('should have the property modifiedInstance (base name: "modified_instance")', function() {
      // uncomment below and update the code to test the property modifiedInstance
      //var instance = new LibreTimeApi.PatchedShowInstance();
      //expect(instance).to.be();
    });

    it('should have the property autoplaylistBuilt (base name: "autoplaylist_built")', function() {
      // uncomment below and update the code to test the property autoplaylistBuilt
      //var instance = new LibreTimeApi.PatchedShowInstance();
      //expect(instance).to.be();
    });

    it('should have the property show (base name: "show")', function() {
      // uncomment below and update the code to test the property show
      //var instance = new LibreTimeApi.PatchedShowInstance();
      //expect(instance).to.be();
    });

    it('should have the property showId (base name: "show_id")', function() {
      // uncomment below and update the code to test the property showId
      //var instance = new LibreTimeApi.PatchedShowInstance();
      //expect(instance).to.be();
    });

    it('should have the property instance (base name: "instance")', function() {
      // uncomment below and update the code to test the property instance
      //var instance = new LibreTimeApi.PatchedShowInstance();
      //expect(instance).to.be();
    });

    it('should have the property file (base name: "file")', function() {
      // uncomment below and update the code to test the property file
      //var instance = new LibreTimeApi.PatchedShowInstance();
      //expect(instance).to.be();
    });

    it('should have the property fileId (base name: "file_id")', function() {
      // uncomment below and update the code to test the property fileId
      //var instance = new LibreTimeApi.PatchedShowInstance();
      //expect(instance).to.be();
    });

  });

}));
