/**
 * LibreTime API
 * Radio Broadcast & Automation Platform
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.LibreTimeApi);
  }
}(this, function(expect, LibreTimeApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new LibreTimeApi.Podcast();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Podcast', function() {
    it('should create an instance of Podcast', function() {
      // uncomment below and update the code to test Podcast
      //var instance = new LibreTimeApi.Podcast();
      //expect(instance).to.be.a(LibreTimeApi.Podcast);
    });

    it('should have the property itemUrl (base name: "item_url")', function() {
      // uncomment below and update the code to test the property itemUrl
      //var instance = new LibreTimeApi.Podcast();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instance = new LibreTimeApi.Podcast();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new LibreTimeApi.Podcast();
      //expect(instance).to.be();
    });

    it('should have the property creator (base name: "creator")', function() {
      // uncomment below and update the code to test the property creator
      //var instance = new LibreTimeApi.Podcast();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new LibreTimeApi.Podcast();
      //expect(instance).to.be();
    });

    it('should have the property language (base name: "language")', function() {
      // uncomment below and update the code to test the property language
      //var instance = new LibreTimeApi.Podcast();
      //expect(instance).to.be();
    });

    it('should have the property copyright (base name: "copyright")', function() {
      // uncomment below and update the code to test the property copyright
      //var instance = new LibreTimeApi.Podcast();
      //expect(instance).to.be();
    });

    it('should have the property link (base name: "link")', function() {
      // uncomment below and update the code to test the property link
      //var instance = new LibreTimeApi.Podcast();
      //expect(instance).to.be();
    });

    it('should have the property itunesAuthor (base name: "itunes_author")', function() {
      // uncomment below and update the code to test the property itunesAuthor
      //var instance = new LibreTimeApi.Podcast();
      //expect(instance).to.be();
    });

    it('should have the property itunesKeywords (base name: "itunes_keywords")', function() {
      // uncomment below and update the code to test the property itunesKeywords
      //var instance = new LibreTimeApi.Podcast();
      //expect(instance).to.be();
    });

    it('should have the property itunesSummary (base name: "itunes_summary")', function() {
      // uncomment below and update the code to test the property itunesSummary
      //var instance = new LibreTimeApi.Podcast();
      //expect(instance).to.be();
    });

    it('should have the property itunesSubtitle (base name: "itunes_subtitle")', function() {
      // uncomment below and update the code to test the property itunesSubtitle
      //var instance = new LibreTimeApi.Podcast();
      //expect(instance).to.be();
    });

    it('should have the property itunesCategory (base name: "itunes_category")', function() {
      // uncomment below and update the code to test the property itunesCategory
      //var instance = new LibreTimeApi.Podcast();
      //expect(instance).to.be();
    });

    it('should have the property itunesExplicit (base name: "itunes_explicit")', function() {
      // uncomment below and update the code to test the property itunesExplicit
      //var instance = new LibreTimeApi.Podcast();
      //expect(instance).to.be();
    });

    it('should have the property owner (base name: "owner")', function() {
      // uncomment below and update the code to test the property owner
      //var instance = new LibreTimeApi.Podcast();
      //expect(instance).to.be();
    });

  });

}));
