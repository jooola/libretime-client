/**
 * LibreTime API
 * Radio Broadcast & Automation Platform
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PatchedFile model module.
 * @module model/PatchedFile
 * @version 2.0.0
 */
class PatchedFile {
    /**
     * Constructs a new <code>PatchedFile</code>.
     * @alias module:model/PatchedFile
     */
    constructor() { 
        
        PatchedFile.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PatchedFile</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PatchedFile} obj Optional instance to populate.
     * @return {module:model/PatchedFile} The populated <code>PatchedFile</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PatchedFile();

            if (data.hasOwnProperty('item_url')) {
                obj['item_url'] = ApiClient.convertToType(data['item_url'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('mime')) {
                obj['mime'] = ApiClient.convertToType(data['mime'], 'String');
            }
            if (data.hasOwnProperty('ftype')) {
                obj['ftype'] = ApiClient.convertToType(data['ftype'], 'String');
            }
            if (data.hasOwnProperty('filepath')) {
                obj['filepath'] = ApiClient.convertToType(data['filepath'], 'String');
            }
            if (data.hasOwnProperty('import_status')) {
                obj['import_status'] = ApiClient.convertToType(data['import_status'], 'Number');
            }
            if (data.hasOwnProperty('currently_accessing')) {
                obj['currently_accessing'] = ApiClient.convertToType(data['currently_accessing'], 'Number');
            }
            if (data.hasOwnProperty('mtime')) {
                obj['mtime'] = ApiClient.convertToType(data['mtime'], 'Date');
            }
            if (data.hasOwnProperty('utime')) {
                obj['utime'] = ApiClient.convertToType(data['utime'], 'Date');
            }
            if (data.hasOwnProperty('lptime')) {
                obj['lptime'] = ApiClient.convertToType(data['lptime'], 'Date');
            }
            if (data.hasOwnProperty('md5')) {
                obj['md5'] = ApiClient.convertToType(data['md5'], 'String');
            }
            if (data.hasOwnProperty('track_title')) {
                obj['track_title'] = ApiClient.convertToType(data['track_title'], 'String');
            }
            if (data.hasOwnProperty('artist_name')) {
                obj['artist_name'] = ApiClient.convertToType(data['artist_name'], 'String');
            }
            if (data.hasOwnProperty('bit_rate')) {
                obj['bit_rate'] = ApiClient.convertToType(data['bit_rate'], 'Number');
            }
            if (data.hasOwnProperty('sample_rate')) {
                obj['sample_rate'] = ApiClient.convertToType(data['sample_rate'], 'Number');
            }
            if (data.hasOwnProperty('format')) {
                obj['format'] = ApiClient.convertToType(data['format'], 'String');
            }
            if (data.hasOwnProperty('length')) {
                obj['length'] = ApiClient.convertToType(data['length'], 'String');
            }
            if (data.hasOwnProperty('album_title')) {
                obj['album_title'] = ApiClient.convertToType(data['album_title'], 'String');
            }
            if (data.hasOwnProperty('genre')) {
                obj['genre'] = ApiClient.convertToType(data['genre'], 'String');
            }
            if (data.hasOwnProperty('comments')) {
                obj['comments'] = ApiClient.convertToType(data['comments'], 'String');
            }
            if (data.hasOwnProperty('year')) {
                obj['year'] = ApiClient.convertToType(data['year'], 'String');
            }
            if (data.hasOwnProperty('track_number')) {
                obj['track_number'] = ApiClient.convertToType(data['track_number'], 'Number');
            }
            if (data.hasOwnProperty('channels')) {
                obj['channels'] = ApiClient.convertToType(data['channels'], 'Number');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('bpm')) {
                obj['bpm'] = ApiClient.convertToType(data['bpm'], 'Number');
            }
            if (data.hasOwnProperty('rating')) {
                obj['rating'] = ApiClient.convertToType(data['rating'], 'String');
            }
            if (data.hasOwnProperty('encoded_by')) {
                obj['encoded_by'] = ApiClient.convertToType(data['encoded_by'], 'String');
            }
            if (data.hasOwnProperty('disc_number')) {
                obj['disc_number'] = ApiClient.convertToType(data['disc_number'], 'String');
            }
            if (data.hasOwnProperty('mood')) {
                obj['mood'] = ApiClient.convertToType(data['mood'], 'String');
            }
            if (data.hasOwnProperty('label')) {
                obj['label'] = ApiClient.convertToType(data['label'], 'String');
            }
            if (data.hasOwnProperty('composer')) {
                obj['composer'] = ApiClient.convertToType(data['composer'], 'String');
            }
            if (data.hasOwnProperty('encoder')) {
                obj['encoder'] = ApiClient.convertToType(data['encoder'], 'String');
            }
            if (data.hasOwnProperty('checksum')) {
                obj['checksum'] = ApiClient.convertToType(data['checksum'], 'String');
            }
            if (data.hasOwnProperty('lyrics')) {
                obj['lyrics'] = ApiClient.convertToType(data['lyrics'], 'String');
            }
            if (data.hasOwnProperty('orchestra')) {
                obj['orchestra'] = ApiClient.convertToType(data['orchestra'], 'String');
            }
            if (data.hasOwnProperty('conductor')) {
                obj['conductor'] = ApiClient.convertToType(data['conductor'], 'String');
            }
            if (data.hasOwnProperty('lyricist')) {
                obj['lyricist'] = ApiClient.convertToType(data['lyricist'], 'String');
            }
            if (data.hasOwnProperty('original_lyricist')) {
                obj['original_lyricist'] = ApiClient.convertToType(data['original_lyricist'], 'String');
            }
            if (data.hasOwnProperty('radio_station_name')) {
                obj['radio_station_name'] = ApiClient.convertToType(data['radio_station_name'], 'String');
            }
            if (data.hasOwnProperty('info_url')) {
                obj['info_url'] = ApiClient.convertToType(data['info_url'], 'String');
            }
            if (data.hasOwnProperty('artist_url')) {
                obj['artist_url'] = ApiClient.convertToType(data['artist_url'], 'String');
            }
            if (data.hasOwnProperty('audio_source_url')) {
                obj['audio_source_url'] = ApiClient.convertToType(data['audio_source_url'], 'String');
            }
            if (data.hasOwnProperty('radio_station_url')) {
                obj['radio_station_url'] = ApiClient.convertToType(data['radio_station_url'], 'String');
            }
            if (data.hasOwnProperty('buy_this_url')) {
                obj['buy_this_url'] = ApiClient.convertToType(data['buy_this_url'], 'String');
            }
            if (data.hasOwnProperty('isrc_number')) {
                obj['isrc_number'] = ApiClient.convertToType(data['isrc_number'], 'String');
            }
            if (data.hasOwnProperty('catalog_number')) {
                obj['catalog_number'] = ApiClient.convertToType(data['catalog_number'], 'String');
            }
            if (data.hasOwnProperty('original_artist')) {
                obj['original_artist'] = ApiClient.convertToType(data['original_artist'], 'String');
            }
            if (data.hasOwnProperty('copyright')) {
                obj['copyright'] = ApiClient.convertToType(data['copyright'], 'String');
            }
            if (data.hasOwnProperty('report_datetime')) {
                obj['report_datetime'] = ApiClient.convertToType(data['report_datetime'], 'String');
            }
            if (data.hasOwnProperty('report_location')) {
                obj['report_location'] = ApiClient.convertToType(data['report_location'], 'String');
            }
            if (data.hasOwnProperty('report_organization')) {
                obj['report_organization'] = ApiClient.convertToType(data['report_organization'], 'String');
            }
            if (data.hasOwnProperty('subject')) {
                obj['subject'] = ApiClient.convertToType(data['subject'], 'String');
            }
            if (data.hasOwnProperty('contributor')) {
                obj['contributor'] = ApiClient.convertToType(data['contributor'], 'String');
            }
            if (data.hasOwnProperty('language')) {
                obj['language'] = ApiClient.convertToType(data['language'], 'String');
            }
            if (data.hasOwnProperty('file_exists')) {
                obj['file_exists'] = ApiClient.convertToType(data['file_exists'], 'Boolean');
            }
            if (data.hasOwnProperty('replay_gain')) {
                obj['replay_gain'] = ApiClient.convertToType(data['replay_gain'], 'Number');
            }
            if (data.hasOwnProperty('cuein')) {
                obj['cuein'] = ApiClient.convertToType(data['cuein'], 'String');
            }
            if (data.hasOwnProperty('cueout')) {
                obj['cueout'] = ApiClient.convertToType(data['cueout'], 'String');
            }
            if (data.hasOwnProperty('silan_check')) {
                obj['silan_check'] = ApiClient.convertToType(data['silan_check'], 'Boolean');
            }
            if (data.hasOwnProperty('hidden')) {
                obj['hidden'] = ApiClient.convertToType(data['hidden'], 'Boolean');
            }
            if (data.hasOwnProperty('is_scheduled')) {
                obj['is_scheduled'] = ApiClient.convertToType(data['is_scheduled'], 'Boolean');
            }
            if (data.hasOwnProperty('is_playlist')) {
                obj['is_playlist'] = ApiClient.convertToType(data['is_playlist'], 'Boolean');
            }
            if (data.hasOwnProperty('filesize')) {
                obj['filesize'] = ApiClient.convertToType(data['filesize'], 'Number');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('artwork')) {
                obj['artwork'] = ApiClient.convertToType(data['artwork'], 'String');
            }
            if (data.hasOwnProperty('track_type')) {
                obj['track_type'] = ApiClient.convertToType(data['track_type'], 'String');
            }
            if (data.hasOwnProperty('directory')) {
                obj['directory'] = ApiClient.convertToType(data['directory'], 'String');
            }
            if (data.hasOwnProperty('edited_by')) {
                obj['edited_by'] = ApiClient.convertToType(data['edited_by'], 'String');
            }
            if (data.hasOwnProperty('owner')) {
                obj['owner'] = ApiClient.convertToType(data['owner'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} item_url
 */
PatchedFile.prototype['item_url'] = undefined;

/**
 * @member {Number} id
 */
PatchedFile.prototype['id'] = undefined;

/**
 * @member {String} name
 */
PatchedFile.prototype['name'] = undefined;

/**
 * @member {String} mime
 */
PatchedFile.prototype['mime'] = undefined;

/**
 * @member {String} ftype
 */
PatchedFile.prototype['ftype'] = undefined;

/**
 * @member {String} filepath
 */
PatchedFile.prototype['filepath'] = undefined;

/**
 * @member {Number} import_status
 */
PatchedFile.prototype['import_status'] = undefined;

/**
 * @member {Number} currently_accessing
 */
PatchedFile.prototype['currently_accessing'] = undefined;

/**
 * @member {Date} mtime
 */
PatchedFile.prototype['mtime'] = undefined;

/**
 * @member {Date} utime
 */
PatchedFile.prototype['utime'] = undefined;

/**
 * @member {Date} lptime
 */
PatchedFile.prototype['lptime'] = undefined;

/**
 * @member {String} md5
 */
PatchedFile.prototype['md5'] = undefined;

/**
 * @member {String} track_title
 */
PatchedFile.prototype['track_title'] = undefined;

/**
 * @member {String} artist_name
 */
PatchedFile.prototype['artist_name'] = undefined;

/**
 * @member {Number} bit_rate
 */
PatchedFile.prototype['bit_rate'] = undefined;

/**
 * @member {Number} sample_rate
 */
PatchedFile.prototype['sample_rate'] = undefined;

/**
 * @member {String} format
 */
PatchedFile.prototype['format'] = undefined;

/**
 * @member {String} length
 */
PatchedFile.prototype['length'] = undefined;

/**
 * @member {String} album_title
 */
PatchedFile.prototype['album_title'] = undefined;

/**
 * @member {String} genre
 */
PatchedFile.prototype['genre'] = undefined;

/**
 * @member {String} comments
 */
PatchedFile.prototype['comments'] = undefined;

/**
 * @member {String} year
 */
PatchedFile.prototype['year'] = undefined;

/**
 * @member {Number} track_number
 */
PatchedFile.prototype['track_number'] = undefined;

/**
 * @member {Number} channels
 */
PatchedFile.prototype['channels'] = undefined;

/**
 * @member {String} url
 */
PatchedFile.prototype['url'] = undefined;

/**
 * @member {Number} bpm
 */
PatchedFile.prototype['bpm'] = undefined;

/**
 * @member {String} rating
 */
PatchedFile.prototype['rating'] = undefined;

/**
 * @member {String} encoded_by
 */
PatchedFile.prototype['encoded_by'] = undefined;

/**
 * @member {String} disc_number
 */
PatchedFile.prototype['disc_number'] = undefined;

/**
 * @member {String} mood
 */
PatchedFile.prototype['mood'] = undefined;

/**
 * @member {String} label
 */
PatchedFile.prototype['label'] = undefined;

/**
 * @member {String} composer
 */
PatchedFile.prototype['composer'] = undefined;

/**
 * @member {String} encoder
 */
PatchedFile.prototype['encoder'] = undefined;

/**
 * @member {String} checksum
 */
PatchedFile.prototype['checksum'] = undefined;

/**
 * @member {String} lyrics
 */
PatchedFile.prototype['lyrics'] = undefined;

/**
 * @member {String} orchestra
 */
PatchedFile.prototype['orchestra'] = undefined;

/**
 * @member {String} conductor
 */
PatchedFile.prototype['conductor'] = undefined;

/**
 * @member {String} lyricist
 */
PatchedFile.prototype['lyricist'] = undefined;

/**
 * @member {String} original_lyricist
 */
PatchedFile.prototype['original_lyricist'] = undefined;

/**
 * @member {String} radio_station_name
 */
PatchedFile.prototype['radio_station_name'] = undefined;

/**
 * @member {String} info_url
 */
PatchedFile.prototype['info_url'] = undefined;

/**
 * @member {String} artist_url
 */
PatchedFile.prototype['artist_url'] = undefined;

/**
 * @member {String} audio_source_url
 */
PatchedFile.prototype['audio_source_url'] = undefined;

/**
 * @member {String} radio_station_url
 */
PatchedFile.prototype['radio_station_url'] = undefined;

/**
 * @member {String} buy_this_url
 */
PatchedFile.prototype['buy_this_url'] = undefined;

/**
 * @member {String} isrc_number
 */
PatchedFile.prototype['isrc_number'] = undefined;

/**
 * @member {String} catalog_number
 */
PatchedFile.prototype['catalog_number'] = undefined;

/**
 * @member {String} original_artist
 */
PatchedFile.prototype['original_artist'] = undefined;

/**
 * @member {String} copyright
 */
PatchedFile.prototype['copyright'] = undefined;

/**
 * @member {String} report_datetime
 */
PatchedFile.prototype['report_datetime'] = undefined;

/**
 * @member {String} report_location
 */
PatchedFile.prototype['report_location'] = undefined;

/**
 * @member {String} report_organization
 */
PatchedFile.prototype['report_organization'] = undefined;

/**
 * @member {String} subject
 */
PatchedFile.prototype['subject'] = undefined;

/**
 * @member {String} contributor
 */
PatchedFile.prototype['contributor'] = undefined;

/**
 * @member {String} language
 */
PatchedFile.prototype['language'] = undefined;

/**
 * @member {Boolean} file_exists
 */
PatchedFile.prototype['file_exists'] = undefined;

/**
 * @member {Number} replay_gain
 */
PatchedFile.prototype['replay_gain'] = undefined;

/**
 * @member {String} cuein
 */
PatchedFile.prototype['cuein'] = undefined;

/**
 * @member {String} cueout
 */
PatchedFile.prototype['cueout'] = undefined;

/**
 * @member {Boolean} silan_check
 */
PatchedFile.prototype['silan_check'] = undefined;

/**
 * @member {Boolean} hidden
 */
PatchedFile.prototype['hidden'] = undefined;

/**
 * @member {Boolean} is_scheduled
 */
PatchedFile.prototype['is_scheduled'] = undefined;

/**
 * @member {Boolean} is_playlist
 */
PatchedFile.prototype['is_playlist'] = undefined;

/**
 * @member {Number} filesize
 */
PatchedFile.prototype['filesize'] = undefined;

/**
 * @member {String} description
 */
PatchedFile.prototype['description'] = undefined;

/**
 * @member {String} artwork
 */
PatchedFile.prototype['artwork'] = undefined;

/**
 * @member {String} track_type
 */
PatchedFile.prototype['track_type'] = undefined;

/**
 * @member {String} directory
 */
PatchedFile.prototype['directory'] = undefined;

/**
 * @member {String} edited_by
 */
PatchedFile.prototype['edited_by'] = undefined;

/**
 * @member {String} owner
 */
PatchedFile.prototype['owner'] = undefined;






export default PatchedFile;

