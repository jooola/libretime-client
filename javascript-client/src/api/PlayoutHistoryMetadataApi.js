/**
 * LibreTime API
 * Radio Broadcast & Automation Platform
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import PatchedPlayoutHistoryMetadata from '../model/PatchedPlayoutHistoryMetadata';
import PlayoutHistoryMetadata from '../model/PlayoutHistoryMetadata';

/**
* PlayoutHistoryMetadata service.
* @module api/PlayoutHistoryMetadataApi
* @version 2.0.0
*/
export default class PlayoutHistoryMetadataApi {

    /**
    * Constructs a new PlayoutHistoryMetadataApi. 
    * @alias module:api/PlayoutHistoryMetadataApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the playoutHistoryMetadataCreate operation.
     * @callback module:api/PlayoutHistoryMetadataApi~playoutHistoryMetadataCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PlayoutHistoryMetadata} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/PlayoutHistoryMetadata} playoutHistoryMetadata 
     * @param {module:api/PlayoutHistoryMetadataApi~playoutHistoryMetadataCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PlayoutHistoryMetadata}
     */
    playoutHistoryMetadataCreate(playoutHistoryMetadata, callback) {
      let postBody = playoutHistoryMetadata;
      // verify the required parameter 'playoutHistoryMetadata' is set
      if (playoutHistoryMetadata === undefined || playoutHistoryMetadata === null) {
        throw new Error("Missing the required parameter 'playoutHistoryMetadata' when calling playoutHistoryMetadataCreate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth', 'cookieAuth'];
      let contentTypes = ['application/json', 'application/x-www-form-urlencoded', 'multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = PlayoutHistoryMetadata;
      return this.apiClient.callApi(
        '/api/v2/playout-history-metadata/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the playoutHistoryMetadataDestroy operation.
     * @callback module:api/PlayoutHistoryMetadataApi~playoutHistoryMetadataDestroyCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Number} id A unique integer value identifying this playout history metadata.
     * @param {module:api/PlayoutHistoryMetadataApi~playoutHistoryMetadataDestroyCallback} callback The callback function, accepting three arguments: error, data, response
     */
    playoutHistoryMetadataDestroy(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling playoutHistoryMetadataDestroy");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth', 'cookieAuth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/v2/playout-history-metadata/{id}/', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the playoutHistoryMetadataList operation.
     * @callback module:api/PlayoutHistoryMetadataApi~playoutHistoryMetadataListCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/PlayoutHistoryMetadata>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/PlayoutHistoryMetadataApi~playoutHistoryMetadataListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/PlayoutHistoryMetadata>}
     */
    playoutHistoryMetadataList(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth', 'cookieAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [PlayoutHistoryMetadata];
      return this.apiClient.callApi(
        '/api/v2/playout-history-metadata/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the playoutHistoryMetadataPartialUpdate operation.
     * @callback module:api/PlayoutHistoryMetadataApi~playoutHistoryMetadataPartialUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PlayoutHistoryMetadata} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Number} id A unique integer value identifying this playout history metadata.
     * @param {Object} opts Optional parameters
     * @param {module:model/PatchedPlayoutHistoryMetadata} opts.patchedPlayoutHistoryMetadata 
     * @param {module:api/PlayoutHistoryMetadataApi~playoutHistoryMetadataPartialUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PlayoutHistoryMetadata}
     */
    playoutHistoryMetadataPartialUpdate(id, opts, callback) {
      opts = opts || {};
      let postBody = opts['patchedPlayoutHistoryMetadata'];
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling playoutHistoryMetadataPartialUpdate");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth', 'cookieAuth'];
      let contentTypes = ['application/json', 'application/x-www-form-urlencoded', 'multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = PlayoutHistoryMetadata;
      return this.apiClient.callApi(
        '/api/v2/playout-history-metadata/{id}/', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the playoutHistoryMetadataRetrieve operation.
     * @callback module:api/PlayoutHistoryMetadataApi~playoutHistoryMetadataRetrieveCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PlayoutHistoryMetadata} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Number} id A unique integer value identifying this playout history metadata.
     * @param {module:api/PlayoutHistoryMetadataApi~playoutHistoryMetadataRetrieveCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PlayoutHistoryMetadata}
     */
    playoutHistoryMetadataRetrieve(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling playoutHistoryMetadataRetrieve");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth', 'cookieAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PlayoutHistoryMetadata;
      return this.apiClient.callApi(
        '/api/v2/playout-history-metadata/{id}/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the playoutHistoryMetadataUpdate operation.
     * @callback module:api/PlayoutHistoryMetadataApi~playoutHistoryMetadataUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PlayoutHistoryMetadata} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Number} id A unique integer value identifying this playout history metadata.
     * @param {module:model/PlayoutHistoryMetadata} playoutHistoryMetadata 
     * @param {module:api/PlayoutHistoryMetadataApi~playoutHistoryMetadataUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PlayoutHistoryMetadata}
     */
    playoutHistoryMetadataUpdate(id, playoutHistoryMetadata, callback) {
      let postBody = playoutHistoryMetadata;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling playoutHistoryMetadataUpdate");
      }
      // verify the required parameter 'playoutHistoryMetadata' is set
      if (playoutHistoryMetadata === undefined || playoutHistoryMetadata === null) {
        throw new Error("Missing the required parameter 'playoutHistoryMetadata' when calling playoutHistoryMetadataUpdate");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth', 'cookieAuth'];
      let contentTypes = ['application/json', 'application/x-www-form-urlencoded', 'multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = PlayoutHistoryMetadata;
      return this.apiClient.callApi(
        '/api/v2/playout-history-metadata/{id}/', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
